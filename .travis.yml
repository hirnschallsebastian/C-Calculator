language: c
compiler:
- clang
- gcc
matrix:
  include:
  # works on Precise and Trusty
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - libreadline6-dev
        - libreadline6
        - g++-4.9
        - cmake
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

  # works on Precise and Trusty
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - libreadline6-dev
        - libreadline6
        - g++-5
        - cmake
    env:
    - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

  # works on Precise and Trusty
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - libreadline6-dev
        - libreadline6
        - g++-6
        - cmake
    env:
    - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

  # works on Precise and Trusty
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - libreadline6-dev
        - libreadline6
        - g++-7
        - cmake
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

  - os: osx
    addons:
      homebrew:
        packages:
        - cmake
        - readline
        update: true

  - os: windows

before_install:
- eval "${MATRIX_EVAL}"

before_script:
# create a build folder for the out-of-source build
- mkdir build
# switch to build directory
- cd build
# run cmake; here we assume that the project's
# top-level CMakeLists.txt is located at '..'
- cmake ..

script:
# once CMake has done its job we just build using make as usual
- make
# if the project uses ctest we can run the tests like this
#- make test